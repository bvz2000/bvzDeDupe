#! /usr/bin/env python3

import displaylib
from scan import Scan

"""
NOTE: This code is super super temp. Just to test out the modules. Once those are working, this code will be refactored
into a proper front end.
"""
import sys

query_path = sys.argv[1]
canonical_path = sys.argv[2]

displaylib.display_message("\n\n{{YELLOW}}QUERY DIRECTORY")
displaylib.display_message("="*80)

query_scan_obj = Scan(query_path)
for counter in query_scan_obj.scan(report_frequency=10):
    displaylib.display_refreshable_message(f"Files scanned so far: {counter}")
displaylib.display_refreshable_message(" "*80)
displaylib.finish_refreshable_message()

displaylib.display_message(f"Number of files scanned: {query_scan_obj.checked_count}")
displaylib.display_message(f"Number of links skipped: {query_scan_obj.skipped_links}")
displaylib.display_message(f"Number of error files: {query_scan_obj.error_count}")
displaylib.display_message(f"Error files: {query_scan_obj.error_files}")
displaylib.display_message(f"Number of zero length files skipped: {query_scan_obj.skipped_zero_len}")
displaylib.display_message(f"Number of hidden files skipped: {query_scan_obj.skipped_hidden}")
displaylib.display_message(f"Number of files skipped because they were outside of the inclusion regex's: {query_scan_obj.skipped_include}")
displaylib.display_message(f"Number of files skipped because they matched the exclusion regex's: {query_scan_obj.skipped_exclude}")
displaylib.display_message(f"Number of files accumulated: {query_scan_obj.initial_count}")

displaylib.display_message("\n\n{{RED}}CANONICAL DIRECTORY")
displaylib.display_message("="*80)

canonical_scan_obj = Scan(canonical_path)
for counter in canonical_scan_obj.scan(report_frequency=10):
    displaylib.display_refreshable_message(f"Files scanned so far: {counter}")
displaylib.display_refreshable_message(" "*80)
displaylib.finish_refreshable_message()

displaylib.display_message(f"Number of files scanned: {canonical_scan_obj.checked_count}")
displaylib.display_message(f"Number of links skipped: {canonical_scan_obj.skipped_links}")
displaylib.display_message(f"Number of error files: {canonical_scan_obj.error_count}")
displaylib.display_message(f"Error files: {canonical_scan_obj.error_files}")
displaylib.display_message(f"Number of zero length files skipped: {canonical_scan_obj.skipped_zero_len}")
displaylib.display_message(f"Number of hidden files skipped: {canonical_scan_obj.skipped_hidden}")
displaylib.display_message(f"Number of files skipped because they were outside of the inclusion regex's: {canonical_scan_obj.skipped_include}")
displaylib.display_message(f"Number of files skipped because they matched the exclusion regex's: {canonical_scan_obj.skipped_exclude}")
displaylib.display_message(f"Number of files accumulated: {canonical_scan_obj.initial_count}")

# displaylib.display_message("\n\nRemoving from Query Directory List any files that are guaranteed unique because no files of their size exist in the canoncial directory.")
# query_scan_obj.id_non_matching_size_afile_objs(list(canonical_scan_obj.by_size.keys()))
#
# displaylib.display_message("\n\nRemoving from Canonical Directory List any files that are guaranteed unique because no files of their size exist in the query directory.")
# canonical_scan_obj.id_non_matching_size_afile_objs(list(query_scan_obj.by_size.keys()))
